// Mocks generated by Mockito 5.4.2 from annotations
// in ditonton_flutter/test/presentation/pages/shows/show_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:ditonton_flutter/common/state_enum.dart' as _i9;
import 'package:ditonton_flutter/domain/entities/shows/show.dart' as _i10;
import 'package:ditonton_flutter/domain/entities/shows/show_detail.dart' as _i7;
import 'package:ditonton_flutter/domain/usecases/shows/get_show_detail.dart'
    as _i2;
import 'package:ditonton_flutter/domain/usecases/shows/get_show_recommendations.dart'
    as _i3;
import 'package:ditonton_flutter/domain/usecases/shows/get_watchlist_show_status.dart'
    as _i4;
import 'package:ditonton_flutter/domain/usecases/shows/remove_watchlist_show.dart'
    as _i6;
import 'package:ditonton_flutter/domain/usecases/shows/save_watchlist_show.dart'
    as _i5;
import 'package:ditonton_flutter/presentation/provider/shows/show_detail_notifier.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetShowDetail_0 extends _i1.SmartFake implements _i2.GetShowDetail {
  _FakeGetShowDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetShowRecommendations_1 extends _i1.SmartFake
    implements _i3.GetShowRecommendations {
  _FakeGetShowRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListShowStatus_2 extends _i1.SmartFake
    implements _i4.GetWatchListShowStatus {
  _FakeGetWatchListShowStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistShow_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistShow {
  _FakeSaveWatchlistShow_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistShow_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistShow {
  _FakeRemoveWatchlistShow_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShowDetail_5 extends _i1.SmartFake implements _i7.ShowDetail {
  _FakeShowDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ShowDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockShowDetailNotifier extends _i1.Mock
    implements _i8.ShowDetailNotifier {
  MockShowDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetShowDetail get getShowDetail => (super.noSuchMethod(
        Invocation.getter(#getShowDetail),
        returnValue: _FakeGetShowDetail_0(
          this,
          Invocation.getter(#getShowDetail),
        ),
      ) as _i2.GetShowDetail);
  @override
  _i3.GetShowRecommendations get getShowRecommendations => (super.noSuchMethod(
        Invocation.getter(#getShowRecommendations),
        returnValue: _FakeGetShowRecommendations_1(
          this,
          Invocation.getter(#getShowRecommendations),
        ),
      ) as _i3.GetShowRecommendations);
  @override
  _i4.GetWatchListShowStatus get getWatchListShowStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListShowStatus),
        returnValue: _FakeGetWatchListShowStatus_2(
          this,
          Invocation.getter(#getWatchListShowStatus),
        ),
      ) as _i4.GetWatchListShowStatus);
  @override
  _i5.SaveWatchlistShow get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlistShow_3(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i5.SaveWatchlistShow);
  @override
  _i6.RemoveWatchlistShow get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlistShow_4(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i6.RemoveWatchlistShow);
  @override
  _i7.ShowDetail get show => (super.noSuchMethod(
        Invocation.getter(#show),
        returnValue: _FakeShowDetail_5(
          this,
          Invocation.getter(#show),
        ),
      ) as _i7.ShowDetail);
  @override
  _i9.RequestState get showState => (super.noSuchMethod(
        Invocation.getter(#showState),
        returnValue: _i9.RequestState.empty,
      ) as _i9.RequestState);
  @override
  List<_i10.Show> get showRecommendations => (super.noSuchMethod(
        Invocation.getter(#showRecommendations),
        returnValue: <_i10.Show>[],
      ) as List<_i10.Show>);
  @override
  _i9.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i9.RequestState.empty,
      ) as _i9.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> fetchShowDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchShowDetail,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.ShowDetail? show) => (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [show],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlist(_i7.ShowDetail? show) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [show],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
